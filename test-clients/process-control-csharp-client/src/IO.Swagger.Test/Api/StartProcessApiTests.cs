/* 
 * project
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class StartProcessApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
            instance.Configuration.Username = "kieserver";
            instance.Configuration.Password = "kieserver1!";
            instance.Configuration.ApiClient.AddToTypeRegistry("svm.hello_bpm.Person",typeof(Person));
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {
            instance.Configuration.ApiClient.clearTypeRegistry();
        }

        /// <summary>
        /// Test ServerContainersIdProcessesPIdInstancesPostNoParams
        /// </summary>
        [Test]
        public void ServerContainersIdProcessesPIdInstancesPostTestNoParams()
        {
            string id = "SVMContainer";
            string pId = "hellobpm.simpleProcess";
            Object body = null;
            var response = instance.ServerContainersIdProcessesPIdInstancesPost(id, pId, body);
            Assert.IsInstanceOf<string> (response, "response is string");
        }

        /// <summary>
        /// Test ServerContainersIdProcessesPIdInstancesPostAtomicParams
        /// </summary>
        [Test]
        public void ServerContainersIdProcessesPIdInstancesPostTestAtomicParams()
        {
            string id = "SVMContainer";
            string pId = "hellobpm.simpleProcessAtomic";
            var body = new Dictionary<String, String>();
            body.Add("myString", "this is my string");
            var response = instance.ServerContainersIdProcessesPIdInstancesPost(id, pId, body);
            Assert.IsInstanceOf<string> (response, "response is string");
        }


        [Test]
        public void StartProcessWithCustomSerializedObjectTest()
        {   string id = "SVMContainer";
            string pId = "hellobpm.simpleProcessObject";
            Person person = new Person();
            person.name = "nick";
            person.age = 23;
            var processVars = new Dictionary<string, object>();
            processVars.Add("person", person);
            var response = instance.ServerContainersIdProcessesPIdInstancesPost(id, pId, processVars);
            Assert.IsInstanceOf<string> (response, "response is string");
        }
    }

}
