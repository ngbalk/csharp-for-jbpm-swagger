/* 
 * KieServerTaskManager
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Filter
    /// </summary>
    [DataContract]
    public partial class Filter :  IEquatable<Filter>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Filter" /> class.
        /// </summary>
        /// <param name="OrderBy">OrderBy.</param>
        /// <param name="OrderAsc">OrderAsc.</param>
        /// <param name="QueryParams">QueryParams.</param>
        public Filter(string OrderBy = default(string), bool? OrderAsc = default(bool?), List<FilterQueryparams> QueryParams = default(List<FilterQueryparams>))
        {
            this.OrderBy = OrderBy;
            this.OrderAsc = OrderAsc;
            this.QueryParams = QueryParams;
        }
        
        /// <summary>
        /// Gets or Sets OrderBy
        /// </summary>
        [DataMember(Name="order-by", EmitDefaultValue=false)]
        public string OrderBy { get; set; }
        /// <summary>
        /// Gets or Sets OrderAsc
        /// </summary>
        [DataMember(Name="order-asc", EmitDefaultValue=false)]
        public bool? OrderAsc { get; set; }
        /// <summary>
        /// Gets or Sets QueryParams
        /// </summary>
        [DataMember(Name="query-params", EmitDefaultValue=false)]
        public List<FilterQueryparams> QueryParams { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Filter {\n");
            sb.Append("  OrderBy: ").Append(OrderBy).Append("\n");
            sb.Append("  OrderAsc: ").Append(OrderAsc).Append("\n");
            sb.Append("  QueryParams: ").Append(QueryParams).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Filter);
        }

        /// <summary>
        /// Returns true if Filter instances are equal
        /// </summary>
        /// <param name="other">Instance of Filter to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Filter other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.OrderBy == other.OrderBy ||
                    this.OrderBy != null &&
                    this.OrderBy.Equals(other.OrderBy)
                ) && 
                (
                    this.OrderAsc == other.OrderAsc ||
                    this.OrderAsc != null &&
                    this.OrderAsc.Equals(other.OrderAsc)
                ) && 
                (
                    this.QueryParams == other.QueryParams ||
                    this.QueryParams != null &&
                    this.QueryParams.SequenceEqual(other.QueryParams)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.OrderBy != null)
                    hash = hash * 59 + this.OrderBy.GetHashCode();
                if (this.OrderAsc != null)
                    hash = hash * 59 + this.OrderAsc.GetHashCode();
                if (this.QueryParams != null)
                    hash = hash * 59 + this.QueryParams.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
